[{"/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/index.js":"1","/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/App.js":"2","/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/reportWebVitals.js":"3","/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/Resources.js":"4","/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/Constants.js":"5","/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/Resource.js":"6","/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/AddResourceForm.js":"7"},{"size":500,"mtime":1607774413506,"results":"8","hashOfConfig":"9"},{"size":776,"mtime":1607847709775,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607774413510,"results":"11","hashOfConfig":"9"},{"size":4137,"mtime":1607859147802,"results":"12","hashOfConfig":"9"},{"size":63,"mtime":1607866516916,"results":"13","hashOfConfig":"9"},{"size":3493,"mtime":1607860395311,"results":"14","hashOfConfig":"9"},{"size":1019,"mtime":1607851057680,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1huss0u",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/index.js",[],["34","35"],"/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/App.js",[],"/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/reportWebVitals.js",[],"/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/Resources.js",["36","37","38","39","40","41"],"import './resources.css';\n\nimport React from 'react';\nimport {Box, Divider, GridList, GridListTile, InputLabel, MenuItem, Select} from \"@material-ui/core\";\n\nimport ROOT from './Constants';\n\nclass Resources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: [],\n            grade: 'none',\n            subject: 'none'\n        };\n    }\n\n    componentDidMount() {\n        fetch(ROOT + \"/api/resources\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error,\n                    });\n                }\n            )\n    }\n\n    render() {\n        const {error, isLoaded, items, grade, subject} = this.state;\n        if (error) {\n            return <div>Eroare: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Se încarcă...</div>;\n        } else {\n            let r = items.filter((x) => (grade == 'none' || x.grade == grade) && (subject == 'none' || x.subject == subject))\n\n            let state = () => this.state\n            let stateChange = (e) => this.setState((p) => e(p))\n\n            return (\n                <div>\n                    <Box>\n                        <InputLabel id=\"grade-label-id\">Clasa</InputLabel>\n                        <Select labelId=\"grade-label-id\" defaultValue={state().grade} id=\"grade-select-id\"\n                                onChange={(e) => stateChange((prev) => {\n                                    return {\n                                        ...prev,\n                                        grade: e.target.value\n                                    }\n                                })}>\n                            <MenuItem value=\"none\">Toate</MenuItem>\n                            <MenuItem value=\"9\">9</MenuItem>\n                            <MenuItem value=\"10\">10</MenuItem>\n                            <MenuItem value=\"11\">11</MenuItem>\n                            <MenuItem value=\"12\">12</MenuItem>\n                        </Select>\n                        <Divider/>\n\n                        <InputLabel id=\"subject-label-id\">Materie</InputLabel>\n                        <Select labelId=\"subject-label-id\" id=\"subject-select-id\"\n                                defaultValue={state().subject}\n                                onChange={(e) => stateChange((prev) => {\n                                    return {\n                                        ...prev,\n                                        subject: e.target.value\n                                    }\n                                })}>\n                            <MenuItem value=\"none\">Toate</MenuItem>\n                            <MenuItem value=\"informatica\">Informatica</MenuItem>\n                        </Select>\n\n                    </Box>\n                    <Divider/>\n                    {r.length > 0 &&\n                    <GridList cols={3} className={\"api-list\"} cellHeight={320}>\n                        {r.map((item) => (\n                            <GridListTile key={item.id} className={\"resource\"}>\n                                <Box className={\"resource-box\"}>\n                                    <a className=\"resource-link\"\n                                       href={ROOT + \"/resource/\" + item.id}>{item.name}</a>\n\n                                    {subject == 'none' && <p>{item.subject}</p>}\n                                    {grade == 'none' && <p>(Clasa a {item.grade})</p>}\n\n                                    <p className=\"resource-description\">{item.description}</p>\n                                </Box>\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default Resources;","/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/Constants.js",[],"/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/Resource.js",["42","43","44","45"],"import React from 'react';\nimport ROOT from \"./Constants\";\nimport {useParams} from 'react-router-dom';\nimport {Box, Divider, GridList, GridListTile} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {dark} from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport './Resource.css';\n\nexport default function Resource(props) {\n    let {id} = useParams();\n    return (<ResourceW id={id}/>)\n}\n\nclass ResourceW extends React.Component {\n    constructor(props) {\n        super(props);\n        let id = props.id;\n        this.state = {\n            error: null,\n            isLoaded: false,\n            id: id,\n            exercises: [],\n            item: {}\n        };\n    }\n\n    componentDidMount() {\n        fetch(ROOT + \"/api/resources?id=\" + this.state.id)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    fetch(ROOT + \"/api/exercises?id=\" + this.state.id).then(res => res.json()).then((res) => {\n                        this.setState({\n                            isLoaded: true,\n                            id: this.state.id,\n                            exercises: res,\n                            item: result,\n                        });\n                    }, (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error\n                        });\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const {error, isLoaded, id, exercises, item} = this.state;\n\n        if (error) {\n            return <div>Eroare: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Se încarcă...</div>;\n        } else {\n            const renderers = {\n                code: ({language, value}) => {\n                    return <SyntaxHighlighter style={dark} language={language} children={value}/>\n                }\n            }\n            return (\n                <div>\n                    <h1>{item.name}</h1>\n                    <ReactMarkdown className={\"resource-markdown\"} renderers={renderers}\n                                   style={dark}>{item.markdown}</ReactMarkdown>\n\n                    <Divider/>\n\n                    {exercises.length > 0 &&\n                    <div>\n                        <h1>Exercitii</h1>\n\n                        <GridList cols={3} cellHeight={200}>\n                            {\n                                exercises.map((exercise) =>\n                                    <GridListTile className=\"exercise-list-item\">\n                                        <Box className=\"exercise-box\">\n                                            <h1><a href={exercise.link}>{exercise.name}</a></h1>\n                                            <p>Dificultate: {exercise.difficulty_level == 1 ? \"usor\" : exercise.difficulty_level == 2 ? \"mediu\" : exercise.difficulty_level == 3 ? \"greu\" : \"foarte greu\"}</p>\n                                        </Box>\n                                    </GridListTile>\n                                )\n                            }\n                        </GridList>\n                    </div>\n                    }\n                </div>\n            );\n        }\n    }\n}","/home/dinu/go/src/github.com/dblanovschi/eduhack/public/html/src/AddResourceForm.js",["46"],"import {Button, Divider, FormControl, Input, InputLabel, TextField} from \"@material-ui/core\";\nimport React from 'react';\n\nexport default class AddResourceForm extends React.Component {\n    render() {\n        return (\n            <form id=\"add-resource-form\">\n                <FormControl>\n                    <InputLabel htmlFor=\"name\">Nume</InputLabel>\n                    <Input name=\"name\" id=\"name\" form={\"add-resource-form\"}/>\n                </FormControl>\n\n                <Divider />\n\n                <FormControl>\n                    <InputLabel htmlFor=\"md\">Markdown</InputLabel>\n                    <Input name=\"md\" id=\"md\" multiline={true} form={\"add-resource-form\"} aria-multiline={true}/>\n                </FormControl>\n\n                <Divider/>\n\n                <FormControl>\n                    <Button color=\"primary\" fullWidth type=\"submit\" variant=\"contained\">\n                        Adauga resursa\n                    </Button>\n                </FormControl>\n            </form>\n        )\n    }\n}",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":46,"column":48,"nodeType":"53","messageId":"54","endLine":46,"endColumn":50},{"ruleId":"51","severity":1,"message":"52","line":46,"column":69,"nodeType":"53","messageId":"54","endLine":46,"endColumn":71},{"ruleId":"51","severity":1,"message":"52","line":46,"column":91,"nodeType":"53","messageId":"54","endLine":46,"endColumn":93},{"ruleId":"51","severity":1,"message":"52","line":46,"column":114,"nodeType":"53","messageId":"54","endLine":46,"endColumn":116},{"ruleId":"51","severity":1,"message":"52","line":93,"column":46,"nodeType":"53","messageId":"54","endLine":93,"endColumn":48},{"ruleId":"51","severity":1,"message":"52","line":94,"column":44,"nodeType":"53","messageId":"54","endLine":94,"endColumn":46},{"ruleId":"55","severity":1,"message":"56","line":57,"column":33,"nodeType":"57","messageId":"58","endLine":57,"endColumn":35},{"ruleId":"51","severity":1,"message":"52","line":87,"column":88,"nodeType":"53","messageId":"54","endLine":87,"endColumn":90},{"ruleId":"51","severity":1,"message":"52","line":87,"column":130,"nodeType":"53","messageId":"54","endLine":87,"endColumn":132},{"ruleId":"51","severity":1,"message":"52","line":87,"column":173,"nodeType":"53","messageId":"54","endLine":87,"endColumn":175},{"ruleId":"55","severity":1,"message":"59","line":1,"column":58,"nodeType":"57","messageId":"58","endLine":1,"endColumn":67},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]